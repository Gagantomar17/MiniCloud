# =====================================================
# MiniCloud Production Database Configuration
# =====================================================

# Database Configuration
spring.datasource.url=jdbc:mysql://localhost:3306/minicloud?useSSL=true&serverTimezone=UTC&allowPublicKeyRetrieval=true
spring.datasource.username=minicloud_app
spring.datasource.password=your_secure_password_here
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# JPA/Hibernate Configuration
spring.jpa.hibernate.ddl-auto=validate
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.use_sql_comments=false

# Connection Pool Configuration (HikariCP)
spring.datasource.hikari.maximum-pool-size=20
spring.datasource.hikari.minimum-idle=5
spring.datasource.hikari.idle-timeout=300000
spring.datasource.hikari.connection-timeout=20000
spring.datasource.hikari.max-lifetime=1200000

# File Upload Configuration
spring.servlet.multipart.max-file-size=100MB
spring.servlet.multipart.max-request-size=100MB
file.upload-dir=/opt/minicloud/uploads

# JWT Configuration
jwt.secret=your_jwt_secret_key_here_make_it_long_and_secure_at_least_256_bits
jwt.expiration=86400000
jwt.refresh-token.expiration=604800000

# Server Configuration
server.port=8080
server.servlet.context-path=/api/v1

# Logging Configuration
logging.level.com.EkAnek.MiniCloud=INFO
logging.level.org.springframework.security=WARN
logging.level.org.hibernate.SQL=WARN
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=WARN

# Actuator Configuration (for monitoring)
management.endpoints.web.exposure.include=health,info,metrics
management.endpoint.health.show-details=when-authorized

# Security Configuration
spring.security.user.name=admin
spring.security.user.password=admin_password_here

# =====================================================
# PRODUCTION SECURITY NOTES:
# =====================================================
# 1. Change all passwords and secrets
# 2. Use environment variables for sensitive data
# 3. Enable SSL/TLS for database connections
# 4. Configure proper firewall rules
# 5. Use strong JWT secrets (at least 256 bits)
# 6. Regularly rotate credentials
# ===================================================== 